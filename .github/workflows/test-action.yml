name: test-action

on: 
  push: 
  pull_request:
  release:
    types: [published]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        stanza-version: [1.2.0]
        include:
          - python-version: 3.7
            stanza-version: 1.1.1
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Setting Python and OS environment variables
        run: |
          PYTHON=`python -c "import sys; print('.'.join([str(version) for version in sys.version_info[:3]]))"`
          echo "PYTHON=${PYTHON}" >> $GITHUB_ENV
          echo "OS=${{ runner.os }}" >> $GITHUB_ENV
          echo "STANZA=${{ matrix.stanza-version }}" >> $GITHUB_ENV
      
      - name: Python location
        run: echo "Python location ${{ env.pythonLocation }}"
      
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }} # Ubuntu specific  
          # cache the dev requirements
          key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ matrix.stanza-version }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
      
      - name: Install dependencies
        # Install the correct version of Stanza
        run: |
          python -m pip install --upgrade pip
          pip install stanza==${{ matrix.stanza-version }}
          pip install --upgrade --upgrade-strategy eager -r dev-requirements.txt
      
      - name: Code format
        run: |
          black --exclude profile_stanza.py --check --line-length 80 .
          flake8 .
          mypy
  
      - name: Pytest and code coverage
        run: python -m pytest --cov=stanza_batch --cov-report term-missing --cov-report xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          env_vars: OS,PYTHON,STANZA 
          fail_ci_if_error: false 
  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: test

    # In case anybody forks the repository and only on releases do we publish
    if: github.repository == 'apmoore1/stanza-batch' && github.event_name == 'release'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          pip install --upgrade pip build twine
      - name: Build package
        run: |
          python -m build
      - name: Publish core package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload dist/*
